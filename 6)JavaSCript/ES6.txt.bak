 1)let
 2)const 
 3)Arrow Functions
 4)The for/of loop
 5)Map Objects
 6)Set Objects
 7)Default Parameters
 8)Rest Parameters 
 9)Spread SYntax 
 10)Template Literals
 9)Promises
 --------------
 1)Let variables are used for Block scope;
 
 2)The const keyword allows you to declare a constant (a JavaScript variable with a constant value).

Constants are similar to let variables, except that the value cannot be changed.
 
 3)Arrow functions allows a short syntax for writing function expressions.
 // ES5
var x = function(x, y) {
   return x * y;
}

// ES6
const x = (x, y) => x * y;

-------------------

4)The JavaScript for/of statement loops through the values of an iterable objects.
iterable - An object that has iterable properties

const cars = ["BMW", "Volvo", "Mini"];
let text = "";

for (let x of cars) {
  text += x + " ";
}

-------------------
Default Parameters

ES6 allows function parameters to have default values.

function myFunction(x, y = 10) {
  // y is 10 if not passed or undefined
  return x + y;
}
myFunction(5); // will return 15

---------------------------

Rest & Spread Parameters

The rest parameter (...) allows a function to treat an indefinite
 number of arguments as an array:
 
 REST 
 function sum(...args) {
  let sum = 0;
  for (let arg of args) sum += arg;
  return sum;
}

let x = sum(4, 9, 16, 25, 29, 100, 66, 77);

Spread syntax expands an array into separate elements, 
while a rest syntax condenses array elements into a single element.

SPREAD 

let addNumbers = (x, y, z) => x+y+z; //returns sum of x, y and z
const numbers = [1,2,3];
console.log(addNumbers(...numbers));//prints 6