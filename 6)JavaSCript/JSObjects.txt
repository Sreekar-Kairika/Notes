
Objects

In JS objects are everything
All JavaScript values, except primitives, are objects.

Booleans can be objects (if defined with the new keyword)
Numbers can be objects (if defined with the new keyword)
Strings can be objects (if defined with the new keyword)
Dates are always objects
Maths are always objects
Regular expressions are always objects
Arrays are always objects
Functions are always objects
Objects are always objects

--------------------
PRIMITIVES 
A primitive value is a value that has no properties or methods.
A primitive data type is data that has a primitive value.
JavaScript defines 5 types of primitive data types:
	string
	number
	boolean
	null
	undefined
	
A JavaScript object is a collection of named values

It is a common practice to declare objects with the const keyword.

--------------

Object Creation 

There are different ways to create new objects:

Create a single object, using an object literal.
Create a single object, with the keyword new.
Define an object constructor, and then create objects of the constructed type.
Create an object using Object.create().

-------------------------

Propertys

person = {name:"sreekar" , age: 10}

person.name;

person["name"]

delete person["age"]

Nested Objects

---------------

Constructors::

function Person(first, last, age, eye) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eye;
}

------------

Prototype Inheritance 

unction Person(first, last, age, eyecolor) {
  this.firstName = first;
  this.lastName = last;
  this.age = age;
  this.eyeColor = eyecolor;
}

const myFather = new Person("John", "Doe", 50, "blue");
const myMother = new Person("Sally", "Rally", 48, "green");

The JavaScript prototype property allows you to add new properties to object constructors:

Person.prototype.nationality = "English";

